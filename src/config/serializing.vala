using Gee;

namespace Gtklash {
    string serialize_config(Config config) {
        var data = new StringBuilder();

        /**
         * Why?
         * In short, for consistency.
         * But we do not need an encryption. If someone keeps editing anyway,
         * then the bugs are what they asked for.
         */
        data.append("# WARNING: DO NOT EDIT THIS FILE AT YOUR OWN!\n");

        var obj = new Json.Object();
        obj.set_int_member("port", config.port);
        obj.set_int_member("socks-port", config.socks_port);
        obj.set_boolean_member("allow-lan", config.allow_lan);
        obj.set_string_member("external-controller", config.external_controller);
        obj.set_string_member("log-level", config.log_level);
        obj.set_string_member("mode", config.mode);

        var proxies = new Json.Array();
        foreach (Proxy proxy in config.proxies) {
            proxies.add_object_element(proxy.serialize());
        }
        obj.set_array_member("proxies", proxies);

        var proxy_groups = new Json.Array();
        foreach (ProxyGroup group in config.proxy_groups) {
            proxy_groups.add_object_element(group.serialize());
        }
        obj.set_array_member("proxy-groups", proxy_groups);

        var node = new Json.Node(Json.NodeType.OBJECT);
        node.set_object(obj);

        Json.Generator generator = new Json.Generator();
        generator.set_root(node);

        data.append(generator.to_data(null));

        return data.str;
    }

    Config deserialize_config(string data) {
        // TODO
        return Config();
    }
}

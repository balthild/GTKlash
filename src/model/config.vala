namespace Gtklash {
    public struct Config {
        ushort port;
        ushort socks_port;
        bool allow_lan;
        string external_controller;
        string log_level;
        string mode;

        Gee.LinkedList<Proxy> proxies;
        Gee.LinkedList<ProxyGroup?> proxy_groups;
        string rules;

        public string serialize() {
            var data = new StringBuilder();

            /**
             * Why?
             * In short, for consistency.
             * But we do not need an encryption. If someone keeps editing anyway,
             * then the bugs are what they asked for.
             */
            data.append("# WARNING: DO NOT EDIT THIS FILE AT YOUR OWN!\n");

            var obj = new Json.Object();
            obj.set_int_member("port", port);
            obj.set_int_member("socks-port", socks_port);
            obj.set_boolean_member("allow-lan", allow_lan);
            obj.set_string_member("external-controller", external_controller);
            obj.set_string_member("log-level", log_level);
            obj.set_string_member("mode", mode);

            var proxies = new Json.Array();
            foreach (Proxy proxy in this.proxies) {
                proxies.add_object_element(proxy.serialize());
            }
            obj.set_array_member("proxies", proxies);

            var proxy_groups = new Json.Array();
            foreach (ProxyGroup group in this.proxy_groups) {
                proxy_groups.add_object_element(group.serialize());
            }
            obj.set_array_member("proxy-groups", proxy_groups);

            var node = new Json.Node(Json.NodeType.OBJECT);
            node.set_object(obj);

            Json.Generator generator = new Json.Generator();
            generator.set_root(node);

            data.append(generator.to_data(null));

            return data.str;
        }

        public static Config deserialize(string data) {
            // TODO
            return Config();
        }
    }
}
